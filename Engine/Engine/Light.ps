Texture2D shaderTexture;
SamplerState SampleType;

cbuffer LightBuffer
{
    float4 diffuseColor;
    float3 lightDirection;
    float padding;
};

struct PixelInputType
{
    float4 position : SV_POSITION;
    float2 tex : TEXCOORD0;
    float3 normal : NORMAL;
};

float4 LightPixelShader(PixelInputType aInput) : SV_TARGET
{
    float4 textureColor;
    float3 lightDir;
    float lightIntensity;
    float4 color;

    textureColor = shaderTexture.Sample(SampleType, aInput.tex);

    lightDir = -lightDirection;
    lightIntensity = saturate(dot(aInput.normal, lightDir));
	color = saturate(diffuseColor * lightIntensity);    
	 
	color = color * textureColor;
    return color;
}
